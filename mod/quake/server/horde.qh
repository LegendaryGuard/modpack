#pragma once

bool autocvar_horde;

int keys_silver; // number of silver keys the players are carrying
int keys_gold; // number of gold keys the players are carrying

.float storednextthink;
.void(entity this) storedthink;
void Countdown(entity this);
void Wavecheck(entity this);
void SpawnAmmo(entity this);
.int wave; // what wave of the horde mode we're on
.int fodder; // how many fodder squads to spawn
.int elites; // how many elite squads to spawn
.int bosses; // how many bosses to spawn
.int spawncount; // number of monster spawns
.bool army; // Spawn Army? True/fallse
bool CheckBlockedSpawn(entity spawnpoint);

bool key_spawned; // true/false, determine if key has already been spawned, prevent dupes.

const float SPAWN_RESET_TIME = 5; // amount of time that a spawn point is considered occupied and not valid for use

const float HORDE_START_DELAY = 10; // how long to wait before starting
const float HORDE_AMMO_RESPAWN_DELAY = 20; // how long between horde ammo spawns
//float horde;
.float hunger_time;
const float HUNGER_MAX = 10; // max delay between hunger pangs
const float HUNGER_MIN = 2.5; // min delay between hunger pangs

const float DEFAULT_POWERUP_CHANCE = 0.025;
const float POWERUP_CHANCE_GAIN = 0.025;
float powerup_chance;

entity horde_ent; // global horde manager so code can reference without lookup
void remote_wavecheck(entity this); // trigger wavecheck from outside the base entity

.string category; // to do find operations by type
string CATEGORY_MONSTER = "monster";

// Yoder Sept24, Horde Merge
void PrecacheMonsters();
